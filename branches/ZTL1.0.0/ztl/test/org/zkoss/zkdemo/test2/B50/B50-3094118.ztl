<!-- B50-3094118.ztl.java

	Purpose:for testing B50-3094118.ztl .

	Description:

	History:
		05, 11, 2011 11:17:46

Copyright (C) 2011 Potix Corporation. All Rights Reserved.

This program is distributed under Apache License Version 2.0 in the hope that
it will be useful, but WITHOUT ANY WARRANTY.
-->
<test tags="B50-3094118.zul,A,E,Tree,TreeModel">
	<case id="ztl">
		<server><!--
			

<zk>
	<window>
		<zscript>
		<![CDATA[
	class TestTreeModel extends org.zkoss.zul.AbstractTreeModel {
		public TestTreeModel(Object root) {
			super(root);
		}
		public int getChildCount(Object parent) {
			if (isLeaf(parent))
				return -1;
			else {
				ArrayList al = (ArrayList) parent;
				return al.size();
			}
		}
		public boolean isLeaf(Object node) {
			boolean isLeaf = !(node instanceof ArrayList);
			if (!isLeaf) {
				return (((ArrayList) node).size() == 0);
			}
			return isLeaf;
		}
		public Object getChild(Object parent, int index) {
			ArrayList al = (ArrayList) parent;
			return al.get(index);
		}
		public Object getRoot() {
			return super.getRoot();
		}
		public void insert(Object parent, int indexFrom, int indexTo, Object[] newNodes)
				throws IndexOutOfBoundsException {
			ArrayList al = (ArrayList) parent;
			for (int i = indexFrom; i <= indexTo; i++) {
				try {
					al.add(i, newNodes[i - indexFrom]);
				} catch (Exception exp) {
					throw new IndexOutOfBoundsException("Out of bound: " + i + " while size=" + al.size());
				}
			}
			fireEvent(parent, indexFrom, indexTo, org.zkoss.zul.event.TreeDataEvent.INTERVAL_ADDED);

		}
	}
	import java.util.ArrayList;
	ArrayList mother = new ArrayList();
	ArrayList child1 = new ArrayList();

	//Assign children to root "mother"
	mother.add("Davis");
	mother.add(child1);

	ArrayList child2 = new ArrayList();
	child2.add("test");
	mother.add(child2);

	TestTreeModel tma = new TestTreeModel(mother);
	public void insert() {
		Object[] datas = { _v.getValue() };
		tma.insert(child1, 0, 0, datas);
	}
]]>
</zscript>
		<div>1.click insert</div>
		<div>2."[]" tree item should appear the open icon.</div>
		<div>3.click "[]" tree item</div>
		<div>4."aaa" should be first tree node.</div>
		<vbox>
			<tree model="${tma}" id="tree" pageSize="5" ></tree>
			<hbox></hbox>
			<hbox>
				Insert Node:
				<textbox id="_v" value="aaa" />
				<button label="insert" onClick="insert();" />
				<button label="tree invalidate" onClick="tree.invalidate();" />
			</hbox>
		</vbox>
		<zscript>
	</zscript>
	</window>

</zk>

		--></server>
		<client><![CDATA[
				verifyEquals(3,jq("@treerow").length());
				verifyEquals(1,jq("@treerow .z-tree-root-close").length());
				verifyFalse(jq("@treerow:eq(1)").find(".z-tree-root-close").exists());
				click(jq("@button[label=\"insert\"]"));
				waitResponse();
				verifyEquals(2,jq("@treerow .z-tree-root-close").length());
				verifyEquals("[]",jq("@treerow:eq(1)"));
				verifyTrue(jq("@treerow:eq(1)").find(".z-tree-root-close").exists());
				click(jq("@treerow:eq(1) .z-tree-root-close"));
				waitResponse();
				verifyEquals(4,jq("@treerow").length());
				verifyEquals("[]",jq("@treerow:eq(1)"));
				verifyEquals("abc",jq("@treerow:eq(2)"));
		]]></client>
	</case>
</test>