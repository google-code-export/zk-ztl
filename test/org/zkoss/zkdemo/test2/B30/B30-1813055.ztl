<test tags="Listbox,Databind">
	<case id="Databinding">
		<server><!--
<?init class="org.zkoss.zkplus.databind.AnnotateDataBinderInit" ?>
<zk	xmlns:h="http://www.w3.org/1999/xhtml" xmlns:zk="http://www.zkoss.org/2005/zk">
<html><![CDATA[
Two listbox share the same selected variable. It used to cause NullPointerException.<br/>
1. You should see 10 same Listitem on two listbox.<br/>
2. Change listbox 1's current selected item, listbox 2 should change its selection to the same item accordingly.<br/>
3. Change listbox 2's current selected item, listbox 1 should change its selection to the same item accordingly.
]]></html>
<zscript><![CDATA[
	public class Person {
		private String _first;
		private String _last;
		
		public Person(String f, String l) {
			setFirstName(f);
			setLastName(l);
		}
		
		public String getFirstName() {
			return _first;
		}
		
		public void setFirstName(String f) {
			_first = f;
		}
		
		public String getLastName() {
			return _last;
		}
		
		public void setLastName(String l) {
			_last = l;
		}
	}

	List persons = new ArrayList(10);
	for(int j=0; j < 10; ++j) {
		persons.add(new Person("First"+j, "Last"+j));
	}
	Person selected = persons.get(0);
]]></zscript>

<groupbox>
	<caption label="listbox1"/>
	<listbox id="lb1" model="@{persons}" selectedItem="@{selected}">
	<listitem each="@{person}">
		<listcell label="@{person.firstName}"/>
		<listcell label="@{person.lastName}"/>
	</listitem>
	</listbox>
</groupbox>

<groupbox>
	<caption label="listbox2"/>
	<listbox id="lb2" model="@{persons}" selectedItem="@{selected}">
	<listitem each="@{person2}">
		<listcell label="@{person2.firstName}"/>
		<listcell label="@{person2.lastName}"/>
	</listitem>
	</listbox>
</groupbox>
</zk>

		--></server>
		<client><![CDATA[
       		assertEquals("10", lb1.size());
       		assertEquals("10", lb2.size());
       		assertTrue(jq("@listitem:odd").hasClass("z-listbox-odd"));
       		
       		click(lb1.lastChild());
       		assertFalse(lb2.firstChild().is("selected"));
       		assertTrue(lb2.lastChild().is("selected"));

       		click(lb1.firstChild());
       		assertTrue(lb2.firstChild().is("selected"));
       		assertFalse(lb2.lastChild().is("selected"));
       		
       		click(lb2.lastChild());
       		assertFalse(lb1.firstChild().is("selected"));
       		assertTrue(lb1.lastChild().is("selected"));

       		click(lb2.firstChild());
       		assertTrue(lb1.firstChild().is("selected"));
       		assertFalse(lb1.lastChild().is("selected"));
		]]></client>
	</case>
</test>
