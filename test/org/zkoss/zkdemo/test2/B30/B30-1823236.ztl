<test tags="Listbox,Unstable">
	<case id="Layout">
		<server><!--
<zk>
<html><![CDATA[
1. Watch the listbox headers, there should be two headers (header1, header2) there.<br/>
2. Press add item button, you should see first0 and last0 as the first Listitem. But the header2 appear and gone immediately. (IE show horizontal and vertical scrollbar).<br/>
3. Press invalidate will correct the case.<br/>
NOTE: The mentioned bug occurs only if you add item via ListModel and ListDataEvent. If you add Listitem and listcells directly, it works ok.<br/>
]]></html>
<zscript>
    int count = 0;
	List lst = new ArrayList(10);
	ListModel lm = new ListModelList(lst);
	
	class Person {
		String fn;
		String ln;
		public Person(String f, String l) {
			fn = f;
			ln = l;
		}
		public getFn() {
			return fn;
		}
		public getLn() {
			return ln;
		}
	}
	
	public class Rend implements ListitemRenderer {
		public void render(Listitem item, java.lang.Object data)  {
			new Listcell(data.getFn()).setParent(item);
			new Listcell(data.getLn()).setParent(item);
		}
	}
	
	ListitemRenderer rend = new Rend();
</zscript>
<listbox id="lb" width="200px" model="${lm}" itemRenderer="${rend}">
	<listhead>
		<listheader id="h1" label="header1"/>
		<listheader id="h2" label="header2"/>
	</listhead>
</listbox>
<button id="btn" label="add item">
	<attribute name="onClick">
	((List)lb.getModel()).add(new Person("first"+count, "last"+count));
	++count;
	</attribute>
</button>
<button label="invalidate" onClick="lb.invalidate()"/>
</zk>
		 --></server>
		<client><![CDATA[
				verifyTrue(isVisible(h1));
				verifyTrue(isVisible(h2));
				verifyTrue(jq(h1).height() > 10);
				verifyTrue(jq(h1).width() > 30);
				verifyTrue(jq(h2).height() > 10);
				verifyTrue(jq(h2).width() > 30);
				verifyEquals(jq(lb).width(), jq(lb.$n("head")).outerWidth());
				verifyEquals(jq(lb).height(), jq(lb.$n("head")).outerHeight());
				verifyEquals(0, jq(lb.$n("body")).height());
				click(btn);
				waitResponse();
				verifyEquals(jq(lb).height(), jq(lb.$n("head")).outerHeight() +
				jq(lb.$n("body")).outerHeight());
				verifyNotEquals(0, jq(lb.$n("body")).height());
				verifyEquals(jq(lb.$n("body")).outerHeight(), jq(lb.$n("cave")).outerHeight());
				verifyEquals(jq(lb.$n("body")).outerWidth(), jq(lb.$n("cave")).outerWidth());
				
	]]></client></case>
</test>